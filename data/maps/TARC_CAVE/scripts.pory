// ############### Mapscripts ###############

mapscripts TARC_CAVE_MapScripts {
    MAP_SCRIPT_ON_TRANSITION: TARC_CAVE_OnTransition
    MAP_SCRIPT_ON_RESUME: TARC_CAVE_OnResume
    MAP_SCRIPT_ON_FRAME_TABLE [
        VAR_TARC_CAVE_FIELD, 3: TARC_CAVE_EveryFrame_Room1
        VAR_TARC_CAVE_FIELD, 13: TARC_CAVE_EveryFrame_Room2
        VAR_TARC_CAVE_GUARD1_STATE, 1: TARC_CAVE_EveryFrame_Guard1
        VAR_TARC_CAVE_GUARD2_STATE, 1: TARC_CAVE_EveryFrame_Guard2
	]
    }

script TARC_CAVE_OnResume {
    //do nothing
}

script TARC_CAVE_OnTransition {
    setflag(FLAG_DONT_REMOVE_OFFSCREEN_OBJECT)
    clearflag(FLAG_CAVE_KICKOUT1)
    clearflag(FLAG_CAVE_MOVER1)
    clearflag(FLAG_CAVE_GUARD1)
    clearflag(FLAG_CAVE_KICKOUT2)
    clearflag(FLAG_CAVE_KICKOUT3)
    clearflag(FLAG_CAVE_MOVER2)
    //clearflag(FLAG_CAVE_GUARD2)

    //handle object events to allow passage
    if(flag(FLAG_CAVE_SOLVED1))
    {
        setorcopyvar(VAR_TARC_CAVE_FIELD, 10)
        setorcopyvar(VAR_TARC_CAVE_GUARD1_STATE, 1)
        setflag(FLAG_CAVE_KICKOUT1)
        setflag(FLAG_CAVE_MOVER1)
        setflag(FLAG_CAVE_GUARD1)
        setflag(FLAG_HIDE_KICKOUT1)
        setflag(FLAG_HIDE_MOVER1)
        setflag(FLAG_HIDE_GUARD1)
    }
    else
    {
        setorcopyvar(VAR_TARC_CAVE_FIELD, 0)
    }

    if(flag(FLAG_CAVE_SOLVED2))
    {
        setorcopyvar(VAR_TARC_CAVE_GUARD2_STATE, 1)
        setflag(FLAG_CAVE_KICKOUT2)
        setflag(FLAG_CAVE_KICKOUT3)
        setflag(FLAG_CAVE_MOVER2)
        setflag(FLAG_CAVE_GUARD2)
        setflag(FLAG_HIDE_KICKOUT2)
        setflag(FLAG_HIDE_KICKOUT3)
        setflag(FLAG_HIDE_MOVER2)
        setflag(FLAG_HIDE_GUARD2)
    }
}

script TARC_CAVE_EveryFrame_Room1 {
    setorcopyvar(VAR_TARC_CAVE_FIELD, 10)
    if(!flag(FLAG_CAVE_SOLVED1))
    {
        applymovement(6, Move_faceright)
        setflag(FLAG_CAVE_SOLVED1)
        setorcopyvar(VAR_TARC_CAVE_GUARD1_STATE, 1)
        setflag(FLAG_CAVE_KICKOUT1)
        setflag(FLAG_CAVE_MOVER1)
        setflag(FLAG_CAVE_GUARD1)
    }
}

script TARC_CAVE_EveryFrame_Room2 {
    setorcopyvar(VAR_TARC_CAVE_FIELD, 20)
    if(flag(FLAG_CAVE_SOLVED1))
    {
        turnobject(13, DIR_WEST)
        setflag(FLAG_CAVE_SOLVED2)
        setorcopyvar(VAR_TARC_CAVE_GUARD2_STATE, 1)
        setflag(FLAG_CAVE_KICKOUT2)
        setflag(FLAG_CAVE_KICKOUT3)
        setflag(FLAG_CAVE_MOVER2)
        setflag(FLAG_CAVE_GUARD2)
    }
}

script TARC_CAVE_EveryFrame_Guard1 {
    if(flag(FLAG_CAVE_SOLVED1))
    {
        turnobject(6, DIR_EAST)
        setorcopyvar(VAR_TARC_CAVE_GUARD1_STATE, 2)
    }
}

script TARC_CAVE_EveryFrame_Guard2 {
    if(flag(FLAG_CAVE_SOLVED2))
    {
        turnobject(13, DIR_WEST)
        setorcopyvar(VAR_TARC_CAVE_GUARD2_STATE, 2)
    }
}



// ############### Regular EventScripts ###############

script TARC_CAVE_Regirock {
    lock
    faceplayer
    msgbox(format("Who dares to enter these halls?"), MSGBOX_AUTOCLOSE)
    release
}

script TARC_Cave_Kickout {
    lock
    faceplayer
    playmoncry(SPECIES_RAYQUAZA, CRY_MODE_ENCOUNTER)
    msgbox(format("AN INTRUDER!\pLeave this sacred place immediately!"), MSGBOX_AUTOCLOSE)
	warp(MAP_TARC_CAVE, 0)
	release
}

script TARC_Cave_Kickout2 {
    lock
    faceplayer
    playmoncry(SPECIES_RAYQUAZA, CRY_MODE_ENCOUNTER)
    msgbox(format("AN INTRUDER!\pLeave this sacred place immediately!"), MSGBOX_AUTOCLOSE)
	warp(MAP_TARC_CAVE, 2)
	release
}

script TARC_Cave_Mover {
    lock
    faceplayer
    playmoncry(SPECIES_DUSCLOPS, CRY_MODE_ENCOUNTER)
    msgbox(format("Screech!"), MSGBOX_AUTOCLOSE)
	release
}

script TARC_Cave_Kickout_Guard {
    lock
    faceplayer
    playmoncry(SPECIES_PIKACHU, CRY_MODE_ENCOUNTER)
    msgbox(format("AN INTRUDER!\pLeave this sacred place immediately!"), MSGBOX_AUTOCLOSE)
	warp(MAP_TARC_CAVE, 0)
	release
}

script TARC_Cave_Kickout_Guard2 {
    lock
    faceplayer
    playmoncry(SPECIES_PIKACHU, CRY_MODE_ENCOUNTER)
    msgbox(format("AN INTRUDER!\pLeave this sacred place immediately!"), MSGBOX_AUTOCLOSE)
	warp(MAP_TARC_CAVE, 2)
	release
}

// ############### movements ###############

movement Move_faceright {
	face_right
}

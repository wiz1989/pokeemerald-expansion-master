// ############### Mapscripts ###############

mapscripts TARC_Island_MapScripts {
    MAP_SCRIPT_ON_RESUME: TARC_Island_OnResume
    MAP_SCRIPT_ON_TRANSITION: TARC_Island_OnTransition
}

script TARC_Island_OnResume {
	setvar(VAR_TEMP_2, 0) //var for EveryFrame
    // #### uncomment to remove joke
    setflag(FLAG_HIDE_RHYDON)
    setflag(FLAG_HIDE_RHYDON_TRAINER)
}

script TARC_Island_OnTransition {
    clearflag(FLAG_DONT_REMOVE_OFFSCREEN_OBJECT)
    if (var(VAR_RHYDON_STATE) < 5)
    {
        setorcopyvar(VAR_RHYDON_STATE, 0)
    }
    if (var(VAR_RHYDON_STATE) == 5)
    {
        setobjectxyperm(20, 26, 13)
    }
}



// ############### Regular EventScripts ###############

script TARC_Island_Fisherman {
    lock
    faceplayer
    if(flag(FLAG_RECEIVED_OLD_ROD))
    {
    	//check if Remoraid was caught
        if (flag(FLAG_TARC_REMORAID))
        {
            //check if Mantine already in party
            checkpartymon(SPECIES_MANTINE)
            if (var(VAR_RESULT) == TRUE)
            {
                //trade Remoraid
                if (flag(FLAG_REMORAID_TRADE_COMPLETED))
                {
                    msgbox(FortreeCity_House1_Text_MonYouTakeCare, MSGBOX_AUTOCLOSE)
                }
                else
                {
                    msgbox(format("Ohh....what a tasty catch!"), MSGBOX_AUTOCLOSE)
                    setvar(VAR_0x8008, INGAME_TRADE_REMORAID)
                    copyvar(VAR_0x8004, VAR_0x8008)
                    specialvar(VAR_RESULT, GetInGameTradeSpeciesInfo)
                    copyvar(VAR_0x8009, VAR_RESULT)
                    msgbox(format("Fantastic!\pI am afraid to ask, but do you mind sharing it for dinner?\p...\pWell... I mean...\p...trading it for my Porygon?"), MSGBOX_YESNO)
                    if (var(VAR_RESULT) == NO)
                    {
                        goto(FortreeCity_House1_EventScript_DeclineTrade)
                    }
                    special(ChoosePartyMon)
                    waitstate
                    copyvar(VAR_0x800A, VAR_0x8004)
                    if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN)
                    {
                        goto(FortreeCity_House1_EventScript_DeclineTrade)
                    }
                    copyvar(VAR_0x8005, VAR_0x800A)
                    specialvar(VAR_RESULT, GetTradeSpecies)
                    copyvar(VAR_0x800B, VAR_RESULT)
                    if (var(VAR_RESULT) != VAR_0x8009)
                    {
                        goto(FortreeCity_House1_EventScript_NotRequestedMon)
                    }
                    copyvar(VAR_0x8004, VAR_0x8008)
                    copyvar(VAR_0x8005, VAR_0x800A)
                    special(CreateInGameTradePokemon)
                    special(DoInGameTradeScene)
                    waitstate
                    msgbox(format("This Pokémon is really weird.\pSomeone did install a very strange move on its hard drive."), MSGBOX_AUTOCLOSE)
                    setflag(FLAG_REMORAID_TRADE_COMPLETED)
                }
            }
            else
            {
                msgbox(format("Ohh....what a tasty catch!"), MSGBOX_AUTOCLOSE)
                msgbox(format("How sad you still need it for now..."), MSGBOX_AUTOCLOSE)
            }
        }
        else
        {
            msgbox(format("Please think of me if you are getting luckier than I am."), MSGBOX_AUTOCLOSE)
        }
    }
    else
    {
    	msgbox(format("I am stranded here and trying to catch some fish to survive.\pBut these are shark infested waters!\pI can't get anything else to bite.\pHere, take this rod of mine."), MSGBOX_AUTOCLOSE)
	    giveitem(ITEM_OLD_ROD)
	    setflag(FLAG_RECEIVED_OLD_ROD)
	    msgbox(format("And please think of me if you get luckier than I am."), MSGBOX_AUTOCLOSE)
    }
    release
    end
}

script TARC_Island_Chansey {
    lock
    faceplayer
    playmoncry(SPECIES_CHANSEY, CRY_MODE_NORMAL)
    msgbox(format("Chansey wants to take care of your Pokémon."), MSGBOX_AUTOCLOSE)
    call(Common_EventScript_OutOfCenterPartyHeal)
	incrementgamestat(GAME_STAT_RESTED_AT_HOME)
    msgbox(format("Your party has been healed."), MSGBOX_AUTOCLOSE)
    release
}

script TARC_Island_Corphish {
    lock
    faceplayer
    playmoncry(SPECIES_CORPHISH, CRY_MODE_NORMAL)
    msgbox(format("Corph..."), MSGBOX_AUTOCLOSE)
    release
}

script TARC_Island_Rhydon {
    lock
    faceplayer
    playmoncry(SPECIES_RHYDON, CRY_MODE_ENCOUNTER)
    msgbox(format("RHYDON!!!"), MSGBOX_AUTOCLOSE)
    release
}

script TARC_Island_Rhydon_Trainer {
    lock
    faceplayer
    msgbox(format("Hello {PLAYER},\phave you seen that stupid Rhydon next to me?"), MSGBOX_AUTOCLOSE)
    dynmultichoice(0,0, TRUE, 6, 0, DYN_MULTICHOICE_CB_NONE, "Rhydon?")
    msgbox(format("RHYDON DEEZ NUTS!"), MSGBOX_AUTOCLOSE)
    msgbox("HAHAHAHA!")
    applymovement(24, Move_walk_away_right)
    applymovement(25, Move_walk_away_right)
    waitmovement(0)
    removeobject(24)
    removeobject(25)
    release
}

script TARC_Island_Azurill {
    lock
    faceplayer
    playmoncry(SPECIES_AZURILL, CRY_MODE_NORMAL)
    msgbox(format("Rill..."), MSGBOX_AUTOCLOSE)
    release
}

script TARC_Island_Shark {
    lock
    playmoncry(SPECIES_SHARPEDO, CRY_MODE_ENCOUNTER)
    release
}

script TARC_Island_ItemBall_Nugget {
    lock
	removeobject(12, MAP_TARC_ISLAND)
    finditem(ITEM_BIG_NUGGET, 1)
	release
}

script TARC_Island_ItemBall_Balls {
    lock
	removeobject(12, MAP_TARC_ISLAND)
    finditem(ITEM_POKE_BALL, 1)
	release
}

script TARC_Island_ItemBall_Dive {
    lock
	removeobject(2, MAP_TARC_ISLAND)
    finditem(ITEM_HM_DIVE)
	release
}

script TARC_Island_ItemBall_Rock_Climb {
    lock
	removeobject(3, MAP_TARC_ISLAND)
    finditem(ITEM_TM100)
	release
}

script TARC_Island_Celebi {
    lock
    faceplayer
    playmoncry(SPECIES_CELEBI, CRY_MODE_NORMAL)
    if (flag(FLAG_WON_SEISMITOAD))
    {
        msgbox(format("Dear traveler,\nmy time in this place is up.\pMy path is leading me to a far future, many years from now.\pFarewell!"), MSGBOX_AUTOCLOSE)
        dofieldeffectsparkle(13, 3, 0)
        waitfieldeffect(FLDEFF_SPARKLE)
        delay(10)
        dofieldeffectsparkle(15, 3, 0)
        waitfieldeffect(FLDEFF_SPARKLE)
        delay(10)
        dofieldeffectsparkle(14, 3, 0)
        waitfieldeffect(FLDEFF_SPARKLE)
        delay(10)
        dofieldeffect(FLDEFF_RAYQUAZA_SPOTLIGHT)
        delay(400)
        removeobject(9)
        delay(60)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_faceright)
        waitmovement(0)
        delay(60)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_faceleft)
        waitmovement(0)
        delay(60)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_facedown)
        waitmovement(0)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_exclmark)
        waitmovement(0)
        msgbox(format("Celebi vanished in a beam of light."), MSGBOX_AUTOCLOSE) 
    }
    else
    {
        if(!flag(FLAG_TARC_TALKED_TO_CELEBI))
        {
            setflag(FLAG_TARC_TALKED_TO_CELEBI)
            msgbox(format("Dear traveler,\nI am the guardian of this island.\pI can travel through time to grant you access to moves your Pokémon might have forgotten a long time ago."), MSGBOX_AUTOCLOSE)
        }
        msgbox(format("Please choose a Pokémon to teach a move to."), MSGBOX_AUTOCLOSE)
        //setvar(VAR_PIT_TUTOR_STATE, 0)
        special(ChooseMonForMoveRelearner)
        waitstate
        goto_if_eq(VAR_0x8004, PARTY_NOTHING_CHOSEN, EndOfRelearnerScript)
        special(IsSelectedMonEgg)
        goto_if_eq(VAR_RESULT, TRUE, EndOfRelearnerScript)
        goto_if_eq(VAR_0x8005, 0, EndOfRelearnerScript)
        special(TeachMoveRelearnerMove)
        waitstate
    }
    release
}

script EndOfRelearnerScript {
    releaseall
}

script TARC_Island_Zigzagoon {
	lock
	faceplayer
    playmoncry(SPECIES_ZIGZAGOON, CRY_MODE_NORMAL)
	msgbox(format("Zigzagoon is running around searching for items!\pIt will help you out in case you lost crucial items after obtaining them in the first place."), MSGBOX_AUTOCLOSE)
	waitmessage
	setorcopyvar(VAR_TARC_COLLECTOR_COUNT, 0)

	//check Pokeball 1
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
	if (flag(FLAG_TARC_item_Pokeballs) && !flag(FLAG_TARC_REMORAID)) {
		checkitem(ITEM_POKE_BALL)
		if (var(VAR_RESULT) == TRUE) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		checkpartyitem(ITEM_POKE_BALL)
		if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		
		if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
			//player is still holding the item
		}
		else {
            msgbox(format("Oh no, you lost a POKE BALL!"), MSGBOX_AUTOCLOSE)
            waitmessage
            msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
            waitmessage
            giveitem(ITEM_POKE_BALL)
		}
	}

    //check Big Nugget
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
	if (flag(FLAG_TARC_item_Big_Nugget) && !flag(FLAG_WON_SLOWKING)) {
		checkitem(ITEM_BIG_NUGGET)
		if (var(VAR_RESULT) == TRUE) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		checkpartyitem(ITEM_BIG_NUGGET)
		if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		
		if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
			//player is still holding the item
		}
		else {
            msgbox(format("Oh no, you lost a precious BIG NUGGET!"), MSGBOX_AUTOCLOSE)
            waitmessage
            msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
            waitmessage
            giveitem(ITEM_BIG_NUGGET)
		}
	}

    //check Pokeball 2
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
	if (flag(FLAG_TARC_item_Pokeballs2) && !flag(FLAG_TARC_FARFETCHD)) {
		checkitem(ITEM_POKE_BALL)
		if (var(VAR_RESULT) == TRUE) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		checkpartyitem(ITEM_POKE_BALL)
		if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		
		if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
			//player is still holding the item
		}
		else {
            msgbox(format("Oh no, you lost a POKE BALL!"), MSGBOX_AUTOCLOSE)
            waitmessage
            msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
            waitmessage
            giveitem(ITEM_POKE_BALL)
		}
	}

    //check Ability Capsule
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
	if (flag(FLAG_TARC_ITEM_X) && !flag(FLAG_HIDE_WILSON)) {
		checkitem(ITEM_ABILITY_CAPSULE)
		if (var(VAR_RESULT) == TRUE) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		checkpartyitem(ITEM_ABILITY_CAPSULE)
		if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		
		if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
			//player is still holding the item
		}
		else {
            checkpartyability(36) //36 = ABILITY_TRACE
            if (var(VAR_RESULT) == PARTY_SIZE && !flag(FLAG_AQUA_CHANGED_PARTY))
            {
                msgbox(format("Oh no, you lost an Ability Capsule!"), MSGBOX_AUTOCLOSE)
                waitmessage
                msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
                waitmessage
                giveitem(ITEM_ABILITY_CAPSULE)

                //reverse ability from last used capsule
                getpartymonslot(VAR_LAST_CAPSULE_USED_ON)
                //uses VAR_RESULT
                special(ReverseAbilityCapsule)
                msgbox("{STR_VAR_1}'s ability became\n{STR_VAR_2} again!", MSGBOX_AUTOCLOSE)
            }
		}
	}

    //check Life Orb
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
    checkitem(ITEM_LIFE_ORB)
    if (var(VAR_RESULT) == TRUE) {
        setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
    }
    checkpartyitem(ITEM_LIFE_ORB)
    if (var(VAR_RESULT) < 6) {
        setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
    }
    
    if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
        //player is still holding the item
    }
    else {
        msgbox(format("Oh no, you lost your LIFE ORB!"), MSGBOX_AUTOCLOSE)
        waitmessage
        msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
        waitmessage
        giveitem(ITEM_LIFE_ORB)
    }

    //check Gyaradosite
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
	if (flag(FLAG_HIDE_GYARADOSITE)) {
		checkitem(ITEM_GYARADOSITE)
		if (var(VAR_RESULT) == TRUE) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		checkpartyitem(ITEM_GYARADOSITE)
		if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		
		if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
			//player is still holding the item
		}
		else {
            msgbox(format("Oh no, you lost your GYARADOSITE!"), MSGBOX_AUTOCLOSE)
            waitmessage
            msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
            waitmessage
            giveitem(ITEM_GYARADOSITE)
		}
	}

    //check TM100 ROCK_CLIMB
    clearflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
	if (flag(FLAG_TARC_item_Rock_Climb) && !flag(FLAG_AQUA_CHANGED_PARTY)) {
		checkitem(ITEM_TM100)
		if (var(VAR_RESULT) == TRUE) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		checkpartyitem(ITEM_TM100)
		if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
        checkpartymove(MOVE_ROCK_CLIMB)
        if (var(VAR_RESULT) < 6) {
			setflag(FLAG_COLLECTOR_DONT_GIVE_ITEM)
		}
		
		if (flag(FLAG_COLLECTOR_DONT_GIVE_ITEM)) {
			//player is still holding the item
		}
		else {
            msgbox(format("Oh no, you lost your ROCK CLIMB TM!"), MSGBOX_AUTOCLOSE)
            waitmessage
            msgbox(format("You are very lucky that Zigzagoon has found it!"), MSGBOX_AUTOCLOSE)
            waitmessage
            giveitem(ITEM_TM100)
		}
	}

	release
}

script TARC_Island_Game_Master {
    lock
    clearflag(FLAG_TARC_ADDTIME)
    clearflag(FLAG_TARC_GIVE_NO_ADVICE)
    faceplayer
    msgbox(format("I am the Game Master. \pI will give you helpful advice for each situation, but it adds an additional 20min to your play clock."))
    waitmessage
    msgbox(format("Do you want me to give you a hint?"), MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        setflag(FLAG_TARC_GIVE_NO_ADVICE)
        //handle all different scenarios below

        //first battle - fling strat
        if(!flag(FLAG_WON_SLOWKING))
        {
            //check if hint was already given
            if (!flag(FLAG_HINT01)) {
                setflag(FLAG_HINT01)
                setflag(FLAG_TARC_ADDTIME)
            }
            msgbox(format("Are you struggling against Slowking?\pCheck out how Fling works to make good use of your items!"), MSGBOX_AUTOCLOSE)
            //msgbox(format("Are you struggling against Slowking?\pYou should look into the move mechanics of Sableye to find a solution."), MSGBOX_AUTOCLOSE)
            clearflag(FLAG_TARC_GIVE_NO_ADVICE)
        }

        //second battle - evolve Mantyne
        if(flag(FLAG_WON_SLOWKING) && !flag(FLAG_WON_SEISMITOAD))
        {
            checkpartymon(SPECIES_MANTINE)
            
            //searching for the first Pokéball
            if (!flag(FLAG_TARC_item_Pokeballs))
            {
                //check if hint was already given
                if (!flag(FLAG_HINT02)) {
                    setflag(FLAG_HINT02)
                    setflag(FLAG_TARC_ADDTIME)
                }
                //msgbox(format("Your party seems too small to continue from here.\pTake a closer look at the water currents in the south to further explore the area!"), MSGBOX_AUTOCLOSE)
                msgbox(format("Your party seems too small to continue from here.\pYou should explore the outer limits of this island to make progress from your CURRENT situation!"), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
            //catch Remoraid
            elif (!flag(FLAG_TARC_REMORAID))
            {
                //check if hint was already given
                if (!flag(FLAG_HINT03)) {
                    setflag(FLAG_HINT03)
                    setflag(FLAG_TARC_ADDTIME)
                }
                msgbox(format("Seismitoad is too much for you?\pHaving a team member with a super effective move would help tremendously!\pYou should check out the pond above."), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
            //evolve Mantyke to Mantine
            elif (var(VAR_RESULT) == FALSE)
            {
                //check if hint was already given
                if (!flag(FLAG_HINT04)) {
                    setflag(FLAG_HINT04)
                    setflag(FLAG_TARC_ADDTIME)
                }
                //msgbox(format("What a cute Mantyke you have there!\pYou should consider evolving it!"), MSGBOX_AUTOCLOSE)
                msgbox(format("What a cute Mantyke you have there!\pIt's just a little weak.\pMaybe you can make use of your Remoraid to make it stronger?"), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
            else
            {
                //teach Bullet Seed to Mantine
                checkpartymove(MOVE_BULLET_SEED)
                if (var(VAR_RESULT) == PARTY_SIZE) {
                    //check if hint was already given
                    if (!flag(FLAG_HINT05)) {
                        setflag(FLAG_HINT05)
                        setflag(FLAG_TARC_ADDTIME)
                    }
                    msgbox(format("Have you visited Celebi?\pMantine is so versatile to even learn a Grass type move!\pAnd don't forget to include Sableye in the fight!"), MSGBOX_AUTOCLOSE)
                    clearflag(FLAG_TARC_GIVE_NO_ADVICE)
                }
            }
        }

        //cave puzzle
        if (flag(FLAG_WON_SEISMITOAD) && !flag(FLAG_CAVE_SOLVED2))
        {
            //check if hint was already given
            if (!flag(FLAG_HINT06)) {
                setflag(FLAG_HINT06)
                setflag(FLAG_TARC_ADDTIME)
            }
            msgbox(format("You need help with the cave mechanics?\pI cannot solve the puzzle for you, but I can explain the details for you.\pWhen spotted by a Kadabra or Onix it will warp you back to the last entrance.\pIf spotted by a Zubat it will move towards you and stay there.\pWhen all boulders are placed on the target fields Onix will turn around and let you pass."), MSGBOX_AUTOCLOSE)
            clearflag(FLAG_TARC_GIVE_NO_ADVICE)
        }

        //Farfetch'd
        if (flag(FLAG_CAVE_SOLVED2) && !flag(FLAG_TARC_ITEM_X))
        {
            //searching for the second Pokéball
            if (!flag(FLAG_TARC_item_Pokeballs2))
            {
                //check if hint was already given
                if (!flag(FLAG_HINT07)) {
                    setflag(FLAG_HINT07)
                    setflag(FLAG_TARC_ADDTIME)
                }
                msgbox(format("Oh, you haven't picked up the second Pokéball, yet.\pGo to the north to find it!"), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
            //use cut on grass patches
            elif (flag(FLAG_TARC_FARFETCHD) && !flag(FLAG_TARC_CUT_X))
            {
                //check if hint was already given
                if (!flag(FLAG_HINT08)) {
                    setflag(FLAG_HINT08)
                    setflag(FLAG_TARC_ADDTIME)
                }
                msgbox(format("Your Farfetch'd looks strong!\pIt seems to be able to even cut patches of grass.\pYou should look into that possibility!"), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
        }

        //Wonder Guard battle
        if (flag(FLAG_TARC_ITEM_X) && flag(FLAG_REMORAID_TRADE_COMPLETED)  && !defeated(TRAINER_CHASE))
        {
            //check if hint was already given
            if (!flag(FLAG_HINT09)) {
                setflag(FLAG_HINT09)
                setflag(FLAG_TARC_ADDTIME)
            }
            //msgbox(format("The Castaway is too much for you?\pChanging Porygon's ability with the Ability Pill will allow you to copy Wonder Guard!\pThen try to change its type to Dark using the Conversion moves."), MSGBOX_AUTOCLOSE)
            msgbox(format("The Castaway is too much for you?\pYou should look into Porygon's abilities to make it a fair pairing!\pThe key to success then is to manage your typing skillfully!"), MSGBOX_AUTOCLOSE)
            clearflag(FLAG_TARC_GIVE_NO_ADVICE)
        }

        //Rhyhorn
        if (defeated(TRAINER_CHASE) && !flag(FLAG_TARC_BREAKABLE_ROCK))
        {
            //check if hint was already given
            if (!flag(FLAG_HINT10)) {
                setflag(FLAG_HINT10)
                setflag(FLAG_TARC_ADDTIME)
            }
            //msgbox(format("You still cannot reach past the breakable rock?\pTake a look at your Pokédex' searching function to reveal its hidden secret!"), MSGBOX_AUTOCLOSE)
            msgbox(format("You still cannot reach past the breakable rock?\pYou gotta SELECT the right functions of your Pokédex to find the HINT."), MSGBOX_AUTOCLOSE)
            clearflag(FLAG_TARC_GIVE_NO_ADVICE)
        }

        //Dive away
        if (defeated(TRAINER_CHASE) && flag(FLAG_TARC_BREAKABLE_ROCK) && !flag(FLAG_USED_DIVE))
        {
            //check if hint was already given
            if (!flag(FLAG_HINT11)) {
                setflag(FLAG_HINT11)
                setflag(FLAG_TARC_ADDTIME)
            }
            msgbox(format("You are free, {PLAYER}!\pJust dive out of here and follow the way south."), MSGBOX_AUTOCLOSE)
            clearflag(FLAG_TARC_GIVE_NO_ADVICE)
        }

        //UNDERWATER part
        if (flag(FLAG_USED_DIVE) && !defeated(TRAINER_ARCHIE))
        {
            //find hidden cave
            if (flag(FLAG_APPROACHED_ARCHIE) && var(VAR_TARC_UNDERWATER_CAVE) == 0)
            {
                //check if hint was already given
                if (!flag(FLAG_HINT12)) {
                    setflag(FLAG_HINT12)
                    setflag(FLAG_TARC_ADDTIME)
                }
                msgbox(format("Archie is stopping you from leaving the UNDERWATER PATH?\pYou need to closely explore the underwater area then!"), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
            elif (!flag(FLAG_HIDE_GYARADOSITE) && (flag(FLAG_HIDE_MEGA_RING)))
            {
                //check if hint was already given
                if (!flag(FLAG_HINT13)) {
                    setflag(FLAG_HINT13)
                    setflag(FLAG_TARC_ADDTIME)
                }
                msgbox(format("Oh, you have found a Mega Ring!\pBut you are still searching for a Mega Stone?\pSeems like you missed to properly explore Regirock's cave."), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
            elif (flag(FLAG_APPROACHED_ARCHIE) && flag(FLAG_AQUA_CHANGED_PARTY))
            {
                //Archie battle
                //check if hint was already given
                if (!flag(FLAG_HINT14)) {
                    setflag(FLAG_HINT14)
                    setflag(FLAG_TARC_ADDTIME)
                }
                msgbox(format("You keep losing to Archie?\pKeeping Mantine in the backline and handling the Toxic Spikes is the way to go.\pYou can even get rid of these hazards!\pIt will be teamwork but you need to find a way to IGNORE Weezing's Levitate!"), MSGBOX_AUTOCLOSE)
                clearflag(FLAG_TARC_GIVE_NO_ADVICE)
            }
        }
    }
    else {
        msgbox(format("Come back whenever you need me."), MSGBOX_AUTOCLOSE)
        waitmessage
        release
        end
    }
    waitmessage

    //add x min to play clock
    if (flag(FLAG_TARC_ADDTIME)) {
        setorcopyvar(VAR_0x8004, 20)
        special(PlayTimeAddMin)
    }
    else {
        //default message for missing branches
        if (flag(FLAG_TARC_GIVE_NO_ADVICE)) {
            msgbox(format("I am sorry, but I currently have no specific hint to give to you. \pTry proceeding by talking to NPCs, looking for items, catching Pokémon and winning battles. \pOf course, you won't be charged 20 minutes this time."))
            waitmessage
        }
        else {
            msgbox(format("\p...\pI had already given this hint to you before. \pI guess it's fair if I don't charge you any more time for it."))
            waitmessage
        }
    }

    release
}

script TARC_Island_Maxie {
    lock
    faceplayer
    if(!flag(FLAG_TARC_CUT_X))
    {
        msgbox(format("Hello traveler!\lWelcome to my island!"), MSGBOX_AUTOCLOSE)
        msgbox(format("It's been a long time since I have seen a soul on this plateau.\pA famous trainer named Archie was the last one in ages.\pHe visited this place riding a Kyogre and came here to practice his sword fighting skills.\pHe was wandering these MEADOWS swinging his sword to become as skillful as his big idol Link.\pSuch a tragedy he later founded that stupid ass Team Aqua..."), MSGBOX_AUTOCLOSE)     
    }
    else
    {
        if (!flag(FLAG_TARC_ITEM_X))
        {
            msgbox(format("That's weird!\pYou found the hidden spot cutting the grass and didn't interact with it?\pWhy wouldn't you?"), MSGBOX_AUTOCLOSE)
        }
        else
        {
            msgbox(format("You found the item I had hidden!\pA magnificent feat that only a real Pokémon Master could've pulled off."), MSGBOX_AUTOCLOSE)
        }
    }
    release
}

script TARC_Island_sign_Game_Start {
    lock
    msgbox(format("IMPORTANT INFORMATION: \p1.) This game is featuring Gen 8 LEVEL UP move LEARNSETS for any Pokemon you control yourself. \p2.) It is NOT required to grind MULTIPLE levels to win any of the fights. \p3.) The game mechanics are basically vanilla.\lHowever, crits are removed, confusions snap out immediately and RNG odds are either 100% or 0% to balance the game.\p4.) You can always run from ALL kinds of battles.\p5.) Bulbapedia is your friend!"))
    waitmessage
    release
}

script TARC_Island_sign_Rock_Climb {
    lockall
	msgbox("The rock below looks climbable. {DOWN_ARROW}", MSGBOX_AUTOCLOSE)
	releaseall
}

script TARC_Island_Rhyhorn {
    lock
    faceplayer
    msgbox("RHYHORN!", MSGBOX_AUTOCLOSE)
    waitmessage
    if (var(VAR_RHYDON_STATE) == 0 && var(VAR_FACING) == DIR_SOUTH)
    {
        setorcopyvar(VAR_RHYDON_STATE, 1)
        //msgbox("Step 1 ", MSGBOX_AUTOCLOSE)
    }
    elif (var(VAR_RHYDON_STATE) == 1 && var(VAR_FACING) == DIR_WEST)
    {
        setorcopyvar(VAR_RHYDON_STATE, 2)
        //msgbox("Step 2 ", MSGBOX_AUTOCLOSE)
    }
    elif (var(VAR_RHYDON_STATE) == 2 && var(VAR_FACING) == DIR_SOUTH)
    {
        setorcopyvar(VAR_RHYDON_STATE, 3)
        //msgbox("Step 3 ", MSGBOX_AUTOCLOSE)
    }
    elif (var(VAR_RHYDON_STATE) == 3 && var(VAR_FACING) == DIR_EAST)
    {
        setorcopyvar(VAR_RHYDON_STATE, 4)
        //msgbox("Step 4 ", MSGBOX_AUTOCLOSE)
    }
    elif (var(VAR_FACING) == DIR_SOUTH) //default case when approaching from the north
    {
        setorcopyvar(VAR_RHYDON_STATE, 1)
        //msgbox("Step 1 ", MSGBOX_AUTOCLOSE)
    }
    elif (var(VAR_RHYDON_STATE) == 4 && var(VAR_FACING) == DIR_NORTH)
    {
        setorcopyvar(VAR_RHYDON_STATE, 5)
        applymovement(20, Move_exclmark)
        waitmovement(0)
        msgbox("GRWAHH!", MSGBOX_AUTOCLOSE)
        playmoncry(SPECIES_RHYDON, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        applymovement(20, Move_Rhydon)
        special(SpawnCameraObject)
	    applymovement(OBJ_EVENT_ID_CAMERA, Move_Camera)
        waitmovement(0)
        applymovement(21, Move_Rock_smash_break)
        waitmovement(0)
        removeobject(21)
        setflag(FLAG_TARC_BREAKABLE_ROCK)
        setvar(VAR_0x8004, 2)  //vertical pan
        setvar(VAR_0x8005, 2)  //horizontal pan
        setvar(VAR_0x8006, 4)  //num shakes
        setvar(VAR_0x8007, 5)  //shake delay
        special(ShakeCamera)
        waitstate
        delay(60)
	    applymovement(OBJ_EVENT_ID_CAMERA, Move_CameraBack)
        waitmovement(0)
        special(RemoveCameraObject)
        setobjectxyperm(20, 26, 13)
    }
    else
    {
        setorcopyvar(VAR_RHYDON_STATE, 0)
    }
    release
}

// Battles

script TARC_Island_Battle_Seismitoad {
    lock
    faceplayer
    if(!flag(FLAG_WON_SEISMITOAD))
    {
        setwildbattle(SPECIES_SEISMITOAD, 15)
        waitse
        playmoncry(SPECIES_SEISMITOAD, CRY_MODE_ENCOUNTER)
        delay(20)
        waitmoncry
        msgbox(format("RIBBIT!"), MSGBOX_AUTOCLOSE)
        setflag(FLAG_SYS_CTRL_OBJ_DELETE)
        dowildbattle
        clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
        specialvar(VAR_RESULT, GetBattleOutcome)
        switch (var(VAR_RESULT))
        {
            case B_OUTCOME_WON:
                setflag(FLAG_WON_SEISMITOAD)
                removeobject(18)
                msgbox(format("Seismitoad disappeared in the depths of the pond."), MSGBOX_AUTOCLOSE)
                setflag(FLAG_HIDE_SEISMITOAD)
            case B_OUTCOME_RAN:
                clearflag(FLAG_BATTLE_SEISMITOAD)
                goto(EventScript_FieldWhiteOutAfterRunning)
            default:
                clearflag(FLAG_BATTLE_SEISMITOAD)
        }
    }
    else
    {
        msgbox(format("Seismitoad is watching the pond."), MSGBOX_AUTOCLOSE)
    }
	release
}

script TARC_Island_Battle_Slowking {
    lock
    faceplayer
    if(!flag(FLAG_WON_SLOWKING))
    {
        setwildbattle(SPECIES_SLOWKING, 12)
        waitse
        playmoncry(SPECIES_SLOWKING, CRY_MODE_ENCOUNTER)
        delay(20)
        waitmoncry
        msgbox(format("Slowking looks furious at being disturbed from sleeping!"), MSGBOX_AUTOCLOSE)
        setflag(FLAG_SYS_CTRL_OBJ_DELETE)
        dowildbattle
        clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
        specialvar(VAR_RESULT, GetBattleOutcome)
        switch (var(VAR_RESULT))
        {
            case B_OUTCOME_WON:
                setflag(FLAG_WON_SLOWKING)
            case B_OUTCOME_RAN:
                clearflag(FLAG_BATTLE_SLOWKING)
                goto(EventScript_FieldWhiteOutAfterRunning)
            default:
                clearflag(FLAG_BATTLE_SLOWKING)
        }
    }
    else
    {
        msgbox(format("...snore..."), MSGBOX_AUTOCLOSE)
    }
	release
}

script TARC_Island_Battle_Wonderguard {
    trainerbattle_single(TRAINER_CHASE, Route129_Text_ChaseIntro, Route129_Text_ChaseDefeat)
    lock
    msgbox(format("I should've taken a look into your Pokédex first!\pYou are way too experienced for a Castaway like me."), MSGBOX_AUTOCLOSE)
    release
}


// ############### movements ###############

movement Move_Rhydon {
    walk_slow_right*2
    walk_slow_down*5
    jump_2_down
    walk_slow_left*2
    walk_slow_down*2
    walk_fast_left*9
    lock_facing_direction
	jump_right
	unlock_facing_direction
}

movement Move_walk_away_right {
    walk_right * 9
}

movement Move_Camera {
    walk_slow_right*2
    walk_slow_down*5
    walk_down*2
    walk_slow_left*2
    walk_slow_down*2
    walk_fast_left*9
    walk_right
}

movement Move_Rock_smash_break {
    rock_smash_break
}

movement Move_CameraBack {
    walk_diag_northeast*8
    walk_up
}

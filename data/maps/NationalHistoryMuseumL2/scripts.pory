// ############### Mapscripts ###############

mapscripts NationalHistoryMuseumL2_MapScripts {
    MAP_SCRIPT_ON_TRANSITION: NHML2_OnTransition
    MAP_SCRIPT_ON_RESUME: NHML2_OnResume
	MAP_SCRIPT_ON_FRAME_TABLE [
		VAR_TEMP_2, 0: NHML2_EveryFrame
        VAR_NHML1_BOULDER_FELL_DOWN, 1: NHML2_EveryFrame_Boulder
        VAR_NHML2_FIGHT_KABUTOPS, 1: NHML2_EveryFrame_Sash
	]
}

script NHML2_OnTransition {
    //handle STRENGTH boulder visibility
    if (!flag(FLAG_NHML2_SHOW_BOULDER)){
        setflag(FLAG_NHML2_BOULDER)
    }
}

script NHML2_OnResume {
	setvar(VAR_TEMP_2, 0) //var for EveryFrame
	call(load_HONOR_MODE)
    
	end
}

script NHML2_EveryFrame {
	if (flag(FLAG_P01_HONOR_MODE) && flag(FLAG_P01_LOAD_SAVEGAME)) {
		lock
		clearflag(FLAG_P01_LOAD_SAVEGAME)
		buffernumberstring(STR_VAR_1, VAR_P01_CALC)
		call(Common_EventScript_SaveGame)
		closemessage
		release
	}
	setvar(VAR_TEMP_2, 1)
}

script NHML2_EveryFrame_Boulder {
    call(NHML2_Boulder_in_hole)
    end
}

script NHML2_EveryFrame_Sash {
    setorcopyvar(VAR_NHML2_FIGHT_KABUTOPS, 0)
    checkpartyitem(ITEM_FOCUS_SASH)
    if (var(VAR_RESULT) == 6) {
        //party has not acquired focus sash
        clearflag(FLAG_HOLD_NO_SASH)
    }
    else {
        setflag(FLAG_HOLD_NO_SASH)
        setflag(FLAG_GOT_SASH) //first acquired sash sets this flag to log play progress
    }

    //test effect
    setvar(VAR_0x8004, 1)  //vertical pan
    setvar(VAR_0x8005, 1)  //horizontal pan
    setvar(VAR_0x8006, 4)  //num shakes
    setvar(VAR_0x8007, 5)  //shake delay
    special(ShakeCamera)
    waitstate
    end
}


// ############### Regular scripts ###############

script NHML2_Trigger_WarpL3 {
    lockall
    warp(MAP_NATIONAL_HISTORY_MUSEUM_L3, 3, 1)
	releaseall
	end
}

script NHML2_Trigger_WarpL1 {
    lockall
    warp(MAP_NATIONAL_HISTORY_MUSEUM_L1, 26, 1)
    releaseall
	end
}

script NHML2_PC {
    call(EventScript_PC)
}

script NHML2_Nurse {
    lock
    faceplayer
    msgbox(format("Let me heal your party."), MSGBOX_AUTOCLOSE)
    call(Common_EventScript_OutOfCenterPartyHeal)
	incrementgamestat(GAME_STAT_RESTED_AT_HOME)
    msgbox(format("You're good to go again."), MSGBOX_AUTOCLOSE)
    release
    end
}

script NHML2_BlondeMan {
    lock
	faceplayer
    if(defeated(TRAINER_NHM_BRANDON)) {
        msgbox(format("YOU DID IT!"), MSGBOX_AUTOCLOSE)
    }
    else {
        msgbox(format("This guy over there won't let anybody out here until someone defeats him.\lWhat a jerk!"), MSGBOX_AUTOCLOSE)
        waitmessage
        if (flag(FLAG_CAUGHT_ARCHEN)) {
            msgbox(format("Wow...\n...you really look like you could have a good chance of winning."), MSGBOX_AUTOCLOSE)
        }
        else {
            msgbox(format("You should consider getting more Pok√©mon before challenging him."), MSGBOX_AUTOCLOSE)
        }
    }
    waitmessage
    release
    end
}

script NHML2_Battle_Brandon {
	trainerbattle_single(TRAINER_NHM_BRANDON, format("Don't think about fighting the couple on the third floor, if you can't even get past me!"), "I wasn't FEARful enough.")
	lock
	msgbox(format("The couple on floor 3 won't be as easy on you as I was.\pIf there only was a way to stop them from hitting you that hard!"), MSGBOX_AUTOCLOSE)
	release
    if (!flag(FLAG_MOVE_BACK)) {
        applymovement(1, Move_back)
        waitmovement(0)
        setobjectxy(1, 26, 10)
        setflag(FLAG_MOVE_BACK)
    }
	end
}

script NHM2_Battle_Archen {
    msgbox(format("The PLUME FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
    waitmessage
    playmoncry(SPECIES_ARCHEN, CRY_MODE_ENCOUNTER)
    delay(40)
    waitmoncry
    
    //if(!flag(FLAG_CAUGHT_ARCHEN)) {
    setwildbattle(SPECIES_ARCHEN, 12)
    //}
    //else {
        //setwildbattle(SPECIES_ARCHEOPS, 100)
    //}
    dowildbattle
	end
}

script NHM2_Battle_Kabutops {
    //GRASS 2
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 0 && flag(FLAG_NHML2_RIDDLE_STEP1_CHECK) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        clearflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        setflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("There is a DOME FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
    }
    else {
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("The DOME FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        
        playmoncry(SPECIES_KABUTOPS, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry

        if(flag(FLAG_HOLD_NO_SASH)) {
            setorcopyvar(VAR_NHML2_FIGHT_KABUTOPS, 1)
            setwildbattle(SPECIES_KABUTOPS, 100)
        }
        else {
            setorcopyvar(VAR_NHML2_FIGHT_KABUTOPS, 1)
            setwildbattle(SPECIES_KABUTOPS, 100, ITEM_FOCUS_SASH)
        }
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Omastar {
    //WATER 3
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 1 && flag(FLAG_NHML2_RIDDLE_STEP2_CHECK) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        setflag(FLAG_NHML2_RIDDLE_SOLVED)
        setflag(FLAG_NHML2_SHOW_BOULDER)
        msgbox(format("There is a HELIX FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
        setvar(VAR_0x8004, 1)  //vertical pan
        setvar(VAR_0x8005, 1)  //horizontal pan
        setvar(VAR_0x8006, 4)  //num shakes
        setvar(VAR_0x8007, 5)  //shake delay
        special(ShakeCamera)
	    waitstate
        fadescreen(FADE_TO_BLACK)
        addobject(3, MAP_NATIONAL_HISTORY_MUSEUM_L2)
        fadescreen(FADE_FROM_BLACK)
        clearflag(FLAG_NHML2_BOULDER)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_exclmark)
        waitmovement(0)
        msgbox(format("Something heavy fell from above!"))
	    waitmessage
    }
    else {
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("The HELIX FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_OMASTAR, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_OMASTAR, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Aerodactyl {
    //FIRE 2
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 1 && flag(FLAG_NHML2_RIDDLE_STEP1_CHECK) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        clearflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        setflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("There is an OLD AMBER exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
    }
    else {
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("The OLD AMBER is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_AERODACTYL, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_AERODACTYL, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Cradily {
    //GRASS 3
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 0 && flag(FLAG_NHML2_RIDDLE_STEP2_CHECK) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        setflag(FLAG_NHML2_RIDDLE_SOLVED)
        setflag(FLAG_NHML2_SHOW_BOULDER)
        msgbox(format("There is a ROOT FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
        setvar(VAR_0x8004, 1)  //vertical pan
        setvar(VAR_0x8005, 1)  //horizontal pan
        setvar(VAR_0x8006, 4)  //num shakes
        setvar(VAR_0x8007, 5)  //shake delay
        special(ShakeCamera)
	    waitstate
        fadescreen(FADE_TO_BLACK)
        addobject(3, MAP_NATIONAL_HISTORY_MUSEUM_L2)
        fadescreen(FADE_FROM_BLACK)
        clearflag(FLAG_NHML2_BOULDER)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_exclmark)
        waitmovement(0)
        msgbox(format("Something heavy fell from above!"))
	    waitmessage
    }
    else {
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("The ROOT FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_CRADILY, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_CRADILY, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Armaldo {
    //FIRE 3
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 1 && flag(FLAG_NHML2_RIDDLE_STEP2_CHECK) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        setflag(FLAG_NHML2_RIDDLE_SOLVED)
        setflag(FLAG_NHML2_SHOW_BOULDER)
        msgbox(format("There is a CLAW FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
        setvar(VAR_0x8004, 1)  //vertical pan
        setvar(VAR_0x8005, 1)  //horizontal pan
        setvar(VAR_0x8006, 4)  //num shakes
        setvar(VAR_0x8007, 5)  //shake delay
        special(ShakeCamera)
	    waitstate
        fadescreen(FADE_TO_BLACK)
        addobject(3, MAP_NATIONAL_HISTORY_MUSEUM_L2)
        fadescreen(FADE_FROM_BLACK)
        clearflag(FLAG_NHML2_BOULDER)
        applymovement(OBJ_EVENT_ID_PLAYER, Move_exclmark)
        waitmovement(0)
        msgbox(format("Something heavy fell from above!"))
	    waitmessage
    }
    else {
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("The CLAW FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_ARMALDO, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_ARMALDO, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Rampardos {
    //GRASS 1
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 0 && flag(FLAG_NHML2_RIDDLE_START) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        clearflag(FLAG_NHML2_RIDDLE_START)
        setflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        msgbox(format("There is a SKULL FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
    }
    else {
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        msgbox(format("The SKULL FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_RAMPARDOS, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_RAMPARDOS, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Bastiodon {
    //FIRE 1
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 1 && flag(FLAG_NHML2_RIDDLE_START) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        clearflag(FLAG_NHML2_RIDDLE_START)
        setflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        msgbox(format("There is a ARMOR FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
    }
    else {
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        msgbox(format("The ARMOR FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_BASTIODON, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_BASTIODON, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Carracosta {
    //WATER 2
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 1 && flag(FLAG_NHML2_RIDDLE_STEP1_CHECK) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        clearflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        setflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("There is a COVER FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
    }
    else {
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        msgbox(format("The COVER FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_CARRACOSTA, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_CARRACOSTA, 100)
        dowildbattle
    }
    release
	end
}

script NHM2_Battle_Aurorus {
    //WATER 1
    lock
    if (var(VAR_NHM_L2_RIDDLE) == 2 && flag(FLAG_NHML2_RIDDLE_START) && !flag(FLAG_NHML2_RIDDLE_SOLVED)) {
        clearflag(FLAG_NHML2_RIDDLE_START)
        setflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        msgbox(format("There is a SAIL FOSSIL exhibited...\l...A hidden switch clicked."), MSGBOX_AUTOCLOSE)
        waitmessage
    }
    else {
        setflag(FLAG_NHML2_RIDDLE_START)
        clearflag(FLAG_NHML2_RIDDLE_STEP1_CHECK)
        clearflag(FLAG_NHML2_RIDDLE_STEP2_CHECK)
        randomnr(3)
        setorcopyvar(VAR_NHM_L2_RIDDLE, VAR_RESULT)
        msgbox(format("The SAIL FOSSIL is glowing brightly.\pFeel it's power!"), MSGBOX_AUTOCLOSE)
        waitmessage
        playmoncry(SPECIES_AURORUS, CRY_MODE_ENCOUNTER)
        delay(40)
        waitmoncry
        setwildbattle(SPECIES_AURORUS, 100)
        dowildbattle
    }
    release
	end
}

script NHML2_Camper {
    lock
	faceplayer
    switch (var(VAR_NHM_L2_RIDDLE)) {
        case 0:
             msgbox(format("Hey, there! What's your favorite TYPE? \pMine is GRASS."), MSGBOX_AUTOCLOSE)
        case 1:
             msgbox(format("Hey, there! What's your favorite TYPE? \pMine is FIRE."), MSGBOX_AUTOCLOSE)
        case 2:
             msgbox(format("Hey, there! What's your favorite TYPE? \pMine is WATER."), MSGBOX_AUTOCLOSE)
    }
    release
    end
}

script NHML2_Game_Master {
    lock
    clearflag(FLAG_P01_ADDTIME)
    clearflag(FLAG_P01_GIVE_ADVICE)
    faceplayer
    msgbox(format("I am the Game Master. \pI will give you helpful advice for each situation, but it adds an additional 20min to your play clock."))
    waitmessage
    msgbox(format("Do you want me to give you a hint?"), MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        setflag(FLAG_P01_GIVE_ADVICE)
        
        //only give advice, if there are no Pok√©mon in the PC
        specialvar(VAR_RESULT, IsPcEmpty)
        if(var(VAR_RESULT) == FALSE)  {
            msgbox(format("You still have Pok√©mon in your PC. I can only give you tips when it's empty. \pOf course, you won't be charged 20 minutes this time."))
            clearflag(FLAG_P01_GIVE_ADVICE)
        }
        else {
            //handle all different scenarios below

            //first fight not yet won
            if (flag(FLAG_HINT01) == TRUE) {
                if (!flag(FLAG_HINT01)) {
                    setflag(FLAG_HINT01)
                    setflag(FLAG_P01_ADDTIME)
                }
                msgbox("text")
                clearflag(FLAG_HINT01)
                clearflag(FLAG_P01_GIVE_ADVICE)
            }
        }
    }
    else {
        msgbox(format("Come back whenever you need me."))
        release
        end
    }
    waitmessage

    //add 30min to play clock
    if (flag(FLAG_P01_ADDTIME)) {
        setorcopyvar(VAR_0x8004, 20)
        special(PlayTimeAddMin)
    }
    else {
        //default message for missing branches
        if (flag(FLAG_P01_GIVE_ADVICE) == TRUE) {
            msgbox(format("I am sorry, but I currently have no hints to give to you. \pTry proceeding by looking for hidden and held items, catching Pok√©mon, talking to NPCs and winning battles. \pOf course, you won't be charged 20 minutes this time."))
            waitmessage
        }
        else {
            msgbox(format("\p...\pI had already given this hint to you before. \lI guess it's fair if I don't charge you any more time for it."))
            waitmessage
        }
    }

    release
    end
}

script NHML2_Boulder {
    call(EventScript_StrengthBoulder)
    end
}

script NHML2_Sign_wiz1989 {
    lock
    msgbox(format("This ROM hack was designed and created by WIZ1989."), MSGBOX_AUTOCLOSE)
    waitmessage
    release
    end
}

script NHML2_Sign_Kyuzee {
    lock
    msgbox(format("All non standard graphics and sprites have been designed and created by KYUZEE."), MSGBOX_AUTOCLOSE)
    waitmessage
    release
    end
}

script NHML2_Sign_hole {
    lock
    msgbox("A hole in the ground. \lMaybe you can push something through \nit.", MSGBOX_AUTOCLOSE)
    waitmessage
    release
    end
}

script NHML2_Boulder_in_hole {
    lock
    removeobject(3, MAP_NATIONAL_HISTORY_MUSEUM_L2)
    setvar(VAR_0x8004, 1)  //vertical pan
    setvar(VAR_0x8005, 1)  //horizontal pan
    setvar(VAR_0x8006, 4)  //num shakes
    setvar(VAR_0x8007, 5)  //shake delay
    special(ShakeCamera)
    waitstate
    applymovement(OBJ_EVENT_ID_PLAYER, Move_exclmark)
    waitmovement(0)
    msgbox(format("The boulder fell through the hole!"), MSGBOX_AUTOCLOSE)
    waitmessage
    //reset var to deactivate the frame table event
    setorcopyvar(VAR_NHML1_BOULDER_FELL_DOWN, 0)
    release
    end
}

script NHM2_Sign_Archen {
    lock
    msgbox(format("This showcase contains an ancient PLUME FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage
    release
    end
}

script NHM2_Sign_Kabutops {
    lock
    msgbox(format("This showcase contains an ancient DOME FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage    
    release
    end
}

script NHM2_Sign_Omastar {
    lock
    msgbox(format("This showcase contains an ancient HELIX FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Aerodactyl {
    lock
    msgbox(format("This showcase contains an ancient OLD AMBER."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Cradily {
    lock
    msgbox(format("This showcase contains an ancient ROOT FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Armaldo {
    lock
    msgbox(format("This showcase contains an ancient CLAW FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Rampardos {
    lock
    msgbox(format("This showcase contains an ancient SKULL FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Bastiodon {
    lock
    msgbox(format("This showcase contains an ancient ARMOR FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Carracosta {
    lock
    msgbox(format("This showcase contains an ancient COVER FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHM2_Sign_Aurorus {
    lock
    msgbox(format("This showcase contains an ancient SAIL FOSSIL."), MSGBOX_AUTOCLOSE)
    waitmessage 
    release
    end
}

script NHML2_Item_HeartScale {
    lock
	finditem(ITEM_HEART_SCALE, 2)
	release
	end
}


// ############### movements ###############

movement Move_exclmark {
	emote_exclamation_mark
}

movement Move_back {
    face_right
    walk_right
    face_left
}


// ############### texts ###############

text Text_NotEnoughMons {
	format("You don't have enough Pok√©mon to fight us.")
}
